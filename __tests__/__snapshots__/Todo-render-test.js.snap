// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "position": "relative",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      activeDotStyle={
        Object {
          "display": "none",
        }
      }
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDirection={true}
      autoplayTimeout={2.5}
      bounces={false}
      contentContainerStyle={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      contentOffset={
        Object {
          "x": 0,
        }
      }
      disableNextButton={false}
      disablePrevButton={false}
      dotStyle={
        Object {
          "display": "none",
        }
      }
      horizontal={true}
      index={0}
      loadMinimal={false}
      loadMinimalSize={1}
      loop={false}
      onIndexChanged={[Function]}
      onMomentumScrollEnd={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      pagingEnabled={true}
      removeClippedSubviews={false}
      scrollsToTop={false}
      showsButtons={false}
      showsHorizontalScrollIndicator={false}
      showsPagination={true}
      showsVerticalScrollIndicator={false}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "height": 1334,
                "width": 750,
              },
              Object {
                "backgroundColor": "transparent",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 116.66666666666667,
                  "justifyContent": "center",
                  "width": "100%",
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 116.66666666666667,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 116.66666666666667,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/images/logo.png",
                    }
                  }
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </View>
              <Text
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#000",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "position": "absolute",
                  }
                }
              >
                InBox
              </Text>
            </View>
            <RCTScrollView
              data={Array []}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              keyboardShouldPersistTaps="handled"
              onContentSizeChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              viewabilityConfigCallbackPairs={Array []}
            >
              <RCTRefreshControl />
              <View />
            </RCTScrollView>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 1334,
                "width": 750,
              },
              Object {
                "backgroundColor": "transparent",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 116.66666666666667,
                  "justifyContent": "center",
                  "width": "100%",
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 116.66666666666667,
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": 116.66666666666667,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/images/logo.png",
                    }
                  }
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </View>
              <Text
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "#000",
                    "fontFamily": undefined,
                    "fontSize": 18,
                    "position": "absolute",
                  }
                }
              >
                InBox
              </Text>
            </View>
            <RCTScrollView
              data={Array []}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              keyboardShouldPersistTaps="handled"
              onContentSizeChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              viewabilityConfigCallbackPairs={Array []}
            >
              <RCTRefreshControl />
              <View />
            </RCTScrollView>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "bottom": 25,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#007aff",
              "borderRadius": 4,
              "height": 8,
              "marginBottom": 3,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 3,
              "width": 8,
            },
            Object {
              "display": "none",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,.2)",
              "borderRadius": 4,
              "height": 8,
              "marginBottom": 3,
              "marginLeft": 3,
              "marginRight": 3,
              "marginTop": 3,
              "width": 8,
            },
            Object {
              "display": "none",
            },
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#f9f9f9",
        "borderColor": "#666666",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "height": 166.75,
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 116.66666666666667,
          "justifyContent": "center",
          "opacity": 1,
          "width": 250.00000000000003,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#000",
              "fontSize": 32,
            },
            undefined,
            Object {
              "fontFamily": "FontAwesome",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3457a4",
          "borderRadius": 8.333333333333334,
          "height": 116.66666666666667,
          "justifyContent": "center",
          "left": 316.6666666666667,
          "opacity": 1,
          "position": "absolute",
          "top": -16.675,
          "width": 116.66666666666667,
        }
      }
      testID="plugButton"
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#FFF",
              "fontSize": 32,
            },
            undefined,
            Object {
              "fontFamily": "FontAwesome",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 116.66666666666667,
          "justifyContent": "center",
          "opacity": 1,
          "width": 250.00000000000003,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 32,
            },
            undefined,
            Object {
              "fontFamily": "FontAwesome",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;
